<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DE_MappedObject" xml:space="preserve">
    <value>Damage Potential</value>
  </data>
  <data name="DE_Intensity" xml:space="preserve">
    <value>Intensity</value>
  </data>
  <data name="DE_Log" xml:space="preserve">
    <value>Log</value>
  </data>
  <data name="DE_Area" xml:space="preserve">
    <value>Area</value>
  </data>
  <data name="DE_Length" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="DE_Piece" xml:space="preserve">
    <value>Piece</value>
  </data>
  <data name="DE_Clipped" xml:space="preserve">
    <value>Clipped</value>
    <comment>bei geschnittenen Geometrien</comment>
  </data>
  <data name="DE_PersonDamage" xml:space="preserve">
    <value>Person Damage</value>
  </data>
  <data name="DE_PropertyDamage" xml:space="preserve">
    <value>Property Damage</value>
  </data>
  <data name="DE_Deaths" xml:space="preserve">
    <value>Deaths</value>
  </data>
  <data name="DE_DeathProbability" xml:space="preserve">
    <value>Probability of Death</value>
  </data>
  <data name="DE_IndirectDamage" xml:space="preserve">
    <value>Indirect Damage (w/o Resilience)</value>
  </data>
  <data name="DE_ResilienceFactor" xml:space="preserve">
    <value>Resilience Factor</value>
  </data>
  <data name="DE_ResilientIndirectDamage" xml:space="preserve">
    <value>Indirect Damage (with Resilience)</value>
  </data>
  <data name="DE_LogResilientIndirectDamage" xml:space="preserve">
    <value>Log Indirect Damage (with Resilience)</value>
  </data>
  <data name="DE_LogPersonDamage" xml:space="preserve">
    <value>Log Person Damage</value>
  </data>
  <data name="DE_LogPropertyDamage" xml:space="preserve">
    <value>Log Property Damage</value>
  </data>
  <data name="DE_LogDeaths" xml:space="preserve">
    <value>Log Deaths</value>
  </data>
  <data name="DE_LogDeathProbability" xml:space="preserve">
    <value>Log Death Prob.</value>
  </data>
  <data name="DE_LogResilienceFactor" xml:space="preserve">
    <value>Log Resilience</value>
  </data>
  <data name="DE_LogIndirectDamage" xml:space="preserve">
    <value>Log Indirect</value>
  </data>
  <data name="PM_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="PM_Costs" xml:space="preserve">
    <value>Construction Costs</value>
  </data>
  <data name="PM_LifeSpan" xml:space="preserve">
    <value>Life Span</value>
  </data>
  <data name="PM_OperatingCosts" xml:space="preserve">
    <value>Operational Costs</value>
  </data>
  <data name="PM_MaintenanceCosts" xml:space="preserve">
    <value>Maintenance Costs</value>
  </data>
  <data name="PM_RateOfReturn" xml:space="preserve">
    <value>Rate of Return</value>
  </data>
  <data name="PM_ValueAddedTax" xml:space="preserve">
    <value>Value Added Tax</value>
  </data>
  <data name="PM_YearlyCosts" xml:space="preserve">
    <value>Total Yearly Costs</value>
  </data>
  <data name="PM_LogYearlyCosts" xml:space="preserve">
    <value>Log Total Yearly Costs</value>
  </data>
  <data name="PA_Hazard" xml:space="preserve">
    <value>Natural Hazard</value>
  </data>
  <data name="PA_ReturnPeriod" xml:space="preserve">
    <value>Return Period</value>
  </data>
  <data name="PA_Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="PA_PrA" xml:space="preserve">
    <value>Spatial Likelihood of Occurrence</value>
    <comment>räumliche Auftretenswahrscheinlichkeit </comment>
  </data>
  <data name="IK_Years" xml:space="preserve">
    <value>years</value>
  </data>
  <data name="DE_Part" xml:space="preserve">
    <value>Part</value>
  </data>
  <data name="DE_PersonCount" xml:space="preserve">
    <value>occupancy</value>
  </data>
  <data name="DE_Floors" xml:space="preserve">
    <value>number of floors</value>
  </data>
  <data name="DE_Staff" xml:space="preserve">
    <value>Daily operating loss</value>
  </data>
  <data name="DE_ProblemDescription" xml:space="preserve">
    <value>Problem description</value>
  </data>
</root>