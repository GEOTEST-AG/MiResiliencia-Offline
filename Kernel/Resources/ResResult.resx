<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PRJ_NoProject" xml:space="preserve">
    <value>no project</value>
  </data>
  <data name="PRJ_ProjectNotFound" xml:space="preserve">
    <value>Project ID {0} not found.</value>
  </data>
  <data name="PR_NatHazard" xml:space="preserve">
    <value>Natural Hazard</value>
  </data>
  <data name="PR_BeforeAction" xml:space="preserve">
    <value>Before Measure</value>
  </data>
  <data name="PR_DamageExtentPerson" xml:space="preserve">
    <value>Person Damage</value>
  </data>
  <data name="PR_DamageExtentDeaths" xml:space="preserve">
    <value>Deaths</value>
  </data>
  <data name="PR_DamageExtentProperty" xml:space="preserve">
    <value>Property Damage</value>
  </data>
  <data name="PR_DamageExtentIndirect" xml:space="preserve">
    <value>Indirect Damage (with Resilience)</value>
  </data>
  <data name="PR_DamageExtentTotal" xml:space="preserve">
    <value>Total Damage</value>
  </data>
  <data name="PR_ReturnPeriods" xml:space="preserve">
    <value>Return Periods</value>
  </data>
  <data name="PR_CollectiveRiskTotal" xml:space="preserve">
    <value>Risk - Total</value>
  </data>
  <data name="PR_CollectiveRiskPerson" xml:space="preserve">
    <value>Risk - Person</value>
  </data>
  <data name="PR_CollectiveRiskProperty" xml:space="preserve">
    <value>Risk - Property</value>
  </data>
  <data name="PR_CollectiveRiskIndirect" xml:space="preserve">
    <value>Risk - Indirect</value>
  </data>
  <data name="PR_beforeActionString" xml:space="preserve">
    <value>before measure</value>
  </data>
  <data name="PR_afterActionString" xml:space="preserve">
    <value>after measure</value>
  </data>
  <data name="PR_CreationTime" xml:space="preserve">
    <value>Creation Time of Project Result</value>
  </data>
  <data name="PR_CollectiveRiskTotalBefore" xml:space="preserve">
    <value>Risk Total - Before Measure</value>
  </data>
  <data name="PR_CollectiveRiskTotalAfter" xml:space="preserve">
    <value>Risk Total - After Measure</value>
  </data>
  <data name="PR_RiskReduction" xml:space="preserve">
    <value>Risk Total - Reduction</value>
  </data>
  <data name="PR_ProtectionMeasureYearlyCosts" xml:space="preserve">
    <value>Protection Measure - Yearly Costs</value>
  </data>
  <data name="PR_BenefitCostRatio" xml:space="preserve">
    <value>Benefit / Cost - Ratio</value>
  </data>
  <data name="SR_ReturnPeriod" xml:space="preserve">
    <value>Return Period</value>
  </data>
  <data name="SR_DamageExtentIndirectResilient" xml:space="preserve">
    <value>Indirect Damage (with Resilience)</value>
  </data>
  <data name="PR_RiskReduktion2" xml:space="preserve">
    <value>Risk Reduction</value>
  </data>
  <data name="PR_BenefitVsCosts" xml:space="preserve">
    <value>Benefit vs. Costs</value>
  </data>
  <data name="PR_Risk" xml:space="preserve">
    <value>Risk</value>
  </data>
  <data name="PR_DamageExtent" xml:space="preserve">
    <value>Damage Extent</value>
  </data>
  <data name="PR_PersonRisk" xml:space="preserve">
    <value>Person Risk</value>
  </data>
  <data name="PR_PropertyRisk" xml:space="preserve">
    <value>Property Risk</value>
  </data>
  <data name="PR_IndirectRisk" xml:space="preserve">
    <value>Indirect Risk</value>
  </data>
  <data name="PRJ_NoDamageExtent" xml:space="preserve">
    <value>No damage extent for project. Consider rerunning the computation.</value>
    <comment>{0} ist ein Platzhalter für Zahlenwert</comment>
  </data>
  <data name="PRJ_LifeSpanError" xml:space="preserve">
    <value>Protection Measure: LifeSpan can't be less than 1. Actual value: {0}</value>
    <comment>{0} ist ein Platzhalter für Zahlenwert</comment>
  </data>
  <data name="PR_BeforeVsAfter" xml:space="preserve">
    <value>Before vs. After Measure</value>
  </data>
  <data name="PR_YearlyCosts" xml:space="preserve">
    <value>Yearly Costs</value>
  </data>
  <data name="PR_BenefitCostRatioString" xml:space="preserve">
    <value>Rating</value>
  </data>
  <data name="PR_BenefitCostHigh" xml:space="preserve">
    <value>Measure is cost-efficient</value>
  </data>
  <data name="PR_BenefitCostMedium" xml:space="preserve">
    <value>Realization to be discussed</value>
  </data>
  <data name="PR_BenefitCostLow" xml:space="preserve">
    <value>Non-cost effective measure</value>
  </data>
</root>