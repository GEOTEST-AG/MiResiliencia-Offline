<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Folder" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="Tab_Map" xml:space="preserve">
    <value>Map</value>
  </data>
  <data name="Project_New" xml:space="preserve">
    <value>New Project</value>
  </data>
  <data name="Project_Open" xml:space="preserve">
    <value>Open project</value>
  </data>
  <data name="Project_Export" xml:space="preserve">
    <value>Export Project</value>
  </data>
  <data name="App_Name" xml:space="preserve">
    <value>MiResiliencia Honduras Desktop</value>
  </data>
  <data name="Project_Name" xml:space="preserve">
    <value>Project name</value>
  </data>
  <data name="Project_Number" xml:space="preserve">
    <value>Project number</value>
  </data>
  <data name="Project_Create" xml:space="preserve">
    <value>Create project</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Project_List" xml:space="preserve">
    <value>Project list</value>
  </data>
  <data name="Info_Edit_End" xml:space="preserve">
    <value>End editing</value>
  </data>
  <data name="Info_Edit_Polygone" xml:space="preserve">
    <value>Double click to exit, ESC key to delete faulty polygons</value>
  </data>
  <data name="Project_Management" xml:space="preserve">
    <value>Project management</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="Map_Control" xml:space="preserve">
    <value>Map control</value>
  </data>
  <data name="Map_Zoom_In" xml:space="preserve">
    <value>Zoom in</value>
  </data>
  <data name="Map_Zoom_Out" xml:space="preserve">
    <value>Zoom out</value>
  </data>
  <data name="Map_Pan" xml:space="preserve">
    <value>Pan</value>
  </data>
  <data name="Map_Cursor_Mode" xml:space="preserve">
    <value>Cursor mode</value>
  </data>
  <data name="Project_Perimeter" xml:space="preserve">
    <value>Project perimeter</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DamagePotential" xml:space="preserve">
    <value>Damage potential</value>
  </data>
  <data name="Project_Save" xml:space="preserve">
    <value>Save project</value>
  </data>
  <data name="Hazard_Map" xml:space="preserve">
    <value>Hazard map</value>
  </data>
  <data name="Hazard_Maps_before_Measure" xml:space="preserve">
    <value>Hazard maps (before measure)</value>
  </data>
  <data name="Hazard_Maps_after_Measure" xml:space="preserve">
    <value>Hazard maps (after measure)</value>
  </data>
  <data name="Resilience" xml:space="preserve">
    <value>Resilience</value>
  </data>
  <data name="Resilience_before_Measure" xml:space="preserve">
    <value>Resilience (before measure)</value>
  </data>
  <data name="Resilience_after_Measure" xml:space="preserve">
    <value>Resilience (after measure)</value>
  </data>
  <data name="MitigationMeasure" xml:space="preserve">
    <value>Mitigation Measure</value>
  </data>
  <data name="Analysis" xml:space="preserve">
    <value>Analysis</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="Info_DoubleClick_Minimize" xml:space="preserve">
    <value>Double click to minimize</value>
  </data>
  <data name="Raster_Add" xml:space="preserve">
    <value>Add raster file</value>
  </data>
  <data name="Layer_Move_Top" xml:space="preserve">
    <value>Move layer to the top</value>
  </data>
  <data name="Layer_Move_Up" xml:space="preserve">
    <value>Move layer up</value>
  </data>
  <data name="Layer_Move_Down" xml:space="preserve">
    <value>Move layer down</value>
  </data>
  <data name="Layer_Move_Bottom" xml:space="preserve">
    <value>Move layer to the bottom</value>
  </data>
  <data name="Layer_Show" xml:space="preserve">
    <value>Show layer</value>
  </data>
  <data name="Layer_Hide" xml:space="preserve">
    <value>Hide layer</value>
  </data>
  <data name="Layer_Fit" xml:space="preserve">
    <value>Fit layer to view</value>
  </data>
  <data name="Layer_Remove" xml:space="preserve">
    <value>Remove layer</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Msg_Internet_No" xml:space="preserve">
    <value>No Internet</value>
  </data>
  <data name="Msg_Internet_Ok" xml:space="preserve">
    <value>Internet OK</value>
  </data>
  <data name="Msg_Db_Disconnected" xml:space="preserve">
    <value>No Database </value>
  </data>
  <data name="Msg_Db_Connected" xml:space="preserve">
    <value>Database OK</value>
  </data>
  <data name="GUI_Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Map_Mapping" xml:space="preserve">
    <value>Mapping</value>
  </data>
</root>